[project]
name = "nubus-data-loader"
version = "0.83.1"
description = "Univention Nubus - Provisioning common code"
authors = [
    {name = "Univention GmbH", email = "packages@univention.de"},
]
license = {text = "AGPL-3.0-only"}
# Strict python version pinning leads to less churn in the lockfile
requires-python = "==3.11.*"

dependencies = [
    "dnspython",
    "jinja2",
    "pyyaml",
    "typer",
    "udm-rest-api-client<1.0.0,>=0.0.2",
]

[dependency-groups]
dev = [
    "pdbpp",
    "pytest>8.0.0",
    "pytest-cov<6.0,>=5.0",
    "pytest-mock",
    "python-jsonpath",
    # additional Helm unittest dependencies
    # TODO: Currently fails the test container build because of git dependency
    # "pytest-helm",
    # "pyyaml",
    # "setuptools",
]

[project.scripts]
process-join-data = "univention.data_loader.cli:run"

[tool.uv.sources]
pytest-helm = { git = "https://git.knut.univention.de/univention/customers/dataport/upx/tooling/pytest_helm.git", rev = "7e576e8d0179c465102010ae49d0a22d3d46d4d3" }

[tool.hatch.build.targets.wheel]
packages = ["src/univention"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
# exclude helm unittests tests by default
testpaths = [
  "tests/unit"
]
log_cli = 0  # activate on the CLI with: "-o log_cli=true"
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s %(levelname)-5s [%(module)s.%(funcName)s:%(lineno)d] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S:%f"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
extend-select = ["I"]  # activate isort

[tool.ruff.lint.isort]
known-first-party = ["univention"]
