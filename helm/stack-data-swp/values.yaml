---

stackDataSwp:

  # -- The URL by which the UDM Rest API can be reached
  udmApiUrl: "http://udm-rest-api/udm/"

  # -- The username to use to connect to the UDM Rest API
  udmApiUser: "cn=admin"

  # -- The password to access the UDM Rest API
  udmApiPassword: null

  # -- The filename which contains the password
  udmApiPasswordFile: "/run/secrets/univention.de/data-loader/udm_secret"

  # -- The name of the ConfigMap to import the data from
  dataConfigMapName: null

  # -- Load data which is useful during development (opt-in)
  loadDevData: false

  # -- Wait for the udm-rest-api to be available
  dependencyUdmApiWait: true

# -- Context used for rendering the data files
stackDataContext:
  ldapBase: "dc=univention-organization,dc=intranet"
  externalDomainName: "univention-organization.test"
  externalMailDomain: "univention-organization.test"
  portalGroupwareLinkBase: "https://webmail.{{ .Values.stackDataContext.externalDomainName }}"
  portalFileshareLinkBase: "https://fs.{{ .Values.stackDataContext.externalDomainName }}"
  portalRealtimeCollaborationLinkBase: "https://ucc.{{ .Values.stackDataContext.externalDomainName }}"
  portalRealtimeVideoconferenceLinkBase: "https://jitsi.{{ .Values.stackDataContext.externalDomainName }}"
  portalManagementProjectLinkBase: "https://project.{{ .Values.stackDataContext.externalDomainName }}"
  portalManagementKnowledgeLinkBase: "https://wiki.{{ .Values.stackDataContext.externalDomainName }}"

  oxDefaultContext: "10"

  portaltileGroupUserStandard:
    - "cn=Domain Users,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupUserAdmin:
    - "cn=Domain Admins,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
    - "cn=Support,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupUserAll:
    - "cn=Domain Admins,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
    - "cn=Domain Users,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupGroupware:
    - "cn=managed-by-attribute-Groupware,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupFileshare:
    - "cn=managed-by-attribute-Fileshare,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupManagementProject:
    - "cn=managed-by-attribute-Projectmanagement,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupManagementKnowledge:
    - "cn=managed-by-attribute-Knowledgemanagement,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupManagementLearn:
    - "cn=managed-by-attribute-Learnmanagement,cn=groups,{{ .Values.stackDataContext.ldapBase }}"
  portaltileGroupLiveCollaboration:
    - "cn=managed-by-attribute-Livecollaboration,cn=groups,{{ .Values.stackDataContext.ldapBase }}"


# -- Container image configuration
image:
  registry: "gitregistry.knut.univention.de"
  repository: "univention/customers/dataport/upx/stack-data/data-loader"
  imagePullPolicy: "Always"
  tag: "latest"

  # -- Define image sha256 as an alternative to `tag`
  sha256: null


## Global values
affinity: {}
environment: {}
fullnameOverride: ""
mountSecrets: true
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
# -- Will be mapped into the containers which run the import job as attribute "resources".
# See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ .
resources: {}
securityContext: {}
tolerations: []

...
