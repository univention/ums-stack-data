# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2025 Univention GmbH

{{ if not .Values.stackDataUms.dataConfigMapName }}
---
{{- /* Simulates one level of recursion

       This applies templating to the values of "stackDataContext" and then
       injects the result back into ".Values" so that the values can be
       used as if Helm would apply templating to the values file.
*/ -}}
{{- $_ := set .Values "stackDataContext" (fromYaml (tpl (toYaml .Values.stackDataContext) .)) }}

kind: "ConfigMap"
apiVersion: "v1"
metadata:
  name: '{{ include "common.names.fullname" . }}-data'
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" ( dict "customLabels" .Values.additionalLabels "context" . ) | nindent 4 }}
  {{- include "nubus-common.annotations.render" ( dict
    "values" ( list .Values.additionalAnnotations )
    "context" . )
    | nindent 2 }}
data:
{{- range $path, $_ := $.Files.Glob "data-files/default/*.yaml" }}
  {{ base $path }}: |-
    # Source: {{ $path }}
{{ $.Files.Get $path | indent 4 }}
{{- end }}

{{- if .Values.stackDataUms.extraDataFiles }}
{{- range $filename, $filecontent := .Values.stackDataUms.extraDataFiles }}
  {{ $filename }}: |-
{{ tpl $filecontent $.top | indent 4 }}
{{- end }}
{{- end }}

{{- end }}
