# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---
apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: {{ include "common.names.fullnameWithRevision" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  {{- if .Values.additionalAnnotations }}
  annotations:
    {{ toYaml .Values.additionalAnnotations | nindent 4 }}
  {{- end }}
spec:
  template:
    metadata:
      name: {{ include "common.names.name" . }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
      annotations:
        checksum/config: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'
        checksum/config-data: '{{ include (print $.Template.BasePath "/configmap-data.yaml") . | sha256sum }}'
        {{- if .Values.additionalAnnotations }}
        {{ toYaml .Values.additionalAnnotations | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: "OnFailure"
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if .Values.stackDataUms.dependencyUdmApiWait }}
      initContainers:
      - name: wait-for-udm-rest-api
        command: ["/bin/sh", "-c", "/usr/local/bin/wait-for-udm-rest-api.py"]
        {{- with .Values.image }}
        image: "{{ .registry }}/{{ .repository }}{{ if .sha256 }}@sha256:{{ .sha256 }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: "{{ .pullPolicy }}"
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ include "common.names.fullname" . }}
        volumeMounts:
        {{- if and (include "stack-data-ums.udmApi.credentialSecret.name" . ) (include "stack-data-ums.udmApi.credentialSecret.key" . ) }}
          - name: {{ include "stack-data-ums.udmApi.credentialSecret.name" . | quote }}
            mountPath: /run/secrets/univention.de/data-loader/udm_secret
            subPath: {{ include "stack-data-ums.udmApi.credentialSecret.key" . | quote }}
        {{- else }}
          - name: secrets
            mountPath: /run/secrets/univention.de/data-loader
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{ end }}
      containers:
      - name: "load-data-ums"
        {{- with .Values.image }}
        image: "{{ .registry }}/{{ .repository }}{{ if .sha256 }}@sha256:{{ .sha256 }}{{ else }}:{{ .tag }}{{ end }}"
        imagePullPolicy: "{{ .pullPolicy }}"
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ include "common.names.fullname" . }}
        volumeMounts:
        {{- if and (include "stack-data-ums.udmApi.credentialSecret.name" . ) (include "stack-data-ums.udmApi.credentialSecret.key" . ) }}
          - name: {{ include "stack-data-ums.udmApi.credentialSecret.name" . | quote }}
            mountPath: /run/secrets/univention.de/data-loader/udm_secret
            subPath: {{ include "stack-data-ums.udmApi.credentialSecret.key" . | quote }}
        {{- else }}
          - name: secrets
            mountPath: /run/secrets/univention.de/data-loader
        {{- end }}
          - name: "data"
            mountPath: "/join-data"
            readOnly: true
          - name: context-config
            mountPath: /template-context
            readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
      {{- if and (include "stack-data-ums.udmApi.credentialSecret.name" . ) (include "stack-data-ums.udmApi.credentialSecret.key" . ) }}
      - name: {{ include "stack-data-ums.udmApi.credentialSecret.name" . | quote }}
        secret:
          secretName: {{ include "stack-data-ums.udmApi.credentialSecret.name" . | quote }}
      {{- else }}
      - name: "secrets"
        secret:
          secretName: {{ include "common.names.fullname" . | quote }}
      {{- end }}
      - name: "data"
        configMap:
          {{- $defaultConfigMapName := printf "%s-data" (include "common.names.fullname" . ) }}
          name: {{ default $defaultConfigMapName .Values.stackDataUms.dataConfigMapName | quote }}
      - name: "context-config"
        secret:
          secretName: "{{ include "common.names.fullname" . }}-context"

...
