# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024-2025 Univention GmbH

---
global:
  # -- Indicates wether this chart is part of a Nubus deployment.
  nubusDeployment: false

  # -- Allows to configure extensions globally.
  extensions: []
  # -- Allows to configure system extensions globally.
  systemExtensions: []

  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"

  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  imagePullPolicy: null

  configUcr: {}

  postgresql:
    connection:
      host: null
      port: null

  udm:
    connection:
      # -- Global default for the URL via which the UDM Rest API can be reached.
      # See "udm.connection.url".
      url: null


dataLoader:
  # -- Allows to disable the data loader Job.
  enabled: true


stackDataUms:

  # -- The internal port on which the UDM Rest API is listening in the Kubernetes Pod.
  # Chart defaults to `9979`.
  udmApiPort: ""

  # -- Enables logging of the template context used to render the template
  # files.
  #
  # Be aware that this may log sensitive information.
  logContext: false

  # -- Enables logging of the rendered templates for troubleshooting.
  #
  # Be aware that this may log sensitive information.
  logTemplate: false

  # -- Wait for the udm-rest-api to be available
  dependencyUdmApiWait: true

  # -- Allow to configure additional data files.
  # This has to be a map from the desired filename to the content. The content has
  # to be a valid YAML stream which the data loader is able to process.
  extraDataFiles: null

udm:
  connection:
    # -- The URL by which the UDM Rest API can be reached.
    # Default `http://udm-rest-api/udm/`.
    url: null
  auth:
    username: "cn=admin"
    password: null
    existingSecret:
      name: null
      keyMapping:
        password: null

# -- Context used to render the data file templates in the data loader.
templateContext:
  # -- Domain name of the instance. Chart defaults to `univention-organization.intranet`
  # Example: `"example.org"`
  domainName: '{{ include "stack-data-ums.domainName" . }}'
  # TODO: Replace workaround
  # See: https://git.knut.univention.de/univention/customers/dataport/team-souvap/-/issues/286
  # -- Interim. The external mail domain in use. Currently required to create
  # the Administrator account. Chart defaults to `univention-organization.test`.
  externalMailDomain: '{{ include "stack-data-ums.externalMailDomain" . }}'
  # -- The initial password of the user "Administrator".
  initialPasswordAdministrator: '{{ include "stack-data-ums.initialPasswordAdministrator" . }}'
  # -- Base DN of the LDAP directory. Chart defaults to `dc=univention-organization,dc=intranet`.
  # Example: `"dc=example,dc=org"`
  ldapBaseDn: '{{ include "stack-data-ums.ldapBaseDn" . }}'
  # -- Load development data, such as test users.
  loadDevData: true
  subDomainsKeycloak: '{{ include "stack-data-ums.subDomains.keycloak" . }}'
  # -- Enable the plain UMC login. Enabling it will show the UMC login tile.
  # This value is also controlled globally, which will cause the ingress to be
  # disabled as well. Enabling it here will show the UMC login tile, but will
  # not enable the ingress path.
  # Example: `false`
  enableDefaultLogin: '{{ include "stack-data-ums.enableDefaultLogin" . }}'
  showUmc: '{{ include "stack-data-ums.showUmc" . }}'


# TODO: the template processing of the data files is being moved into the
# run-time of the container "data-loader". "stackDataContext" will be removed
# once all files have been migrated.

stackDataContext:
  # -- Domain name of the instance. Chart defaults to `univention-organization.intranet`
  # Example: `"example.org"`
  domainname: ""
  # TODO: Replace workaround
  # See: https://git.knut.univention.de/univention/customers/dataport/team-souvap/-/issues/286
  # -- Interim. The external mail domain in use. Currently required to create
  # the Administrator account. Chart defaults to `univention-organization.test`.
  externalMailDomain: ""
  # -- Host name of the instance. Chart defaults to `portal`.
  # Example: `"souvap"`
  hostname: ""
  # -- Hostname of the primary LDAP server. Chart defaults to `ldap-server`.
  # Example: `"ucs-1234.univention.intranet"`
  ldapMasterHost: ""
  # -- Port to connect to the primary LDAP server. Chart defaults to `389`.
  # Example: `389`
  ldapMasterPort: ""
  # -- Hostname of the LDAP server. Chart defaults to `ldap-server`.
  # Example: `"ucs-1234.univention.intranet"`
  ldapHost: ""
  # -- Port to connect to the LDAP server. Chart defaults to `389`.
  # Example: `389`
  ldapPort: ""
  # -- Base DN of the LDAP directory. Chart defaults to `dc=univention-organization,dc=intranet`.
  # Example: `"dc=example,dc=org"`
  ldapBase: ""
  # -- DN of the UMS instance. Chart defaults to `cn=admin,dc=univention-organization,dc=intranet`.
  # Example: `"cn=ucs-1234,cn=dc,cn=computers,dc=example,dc=org"`
  ldapHostDn: ""
  # -- SAML Identity Provider metadata URL (as visible from the user/internet).
  # Example: `"https://id.souvap.example.org/realms/ucs/protocol/saml/descriptor"`
  idpSamlMetadataUrl: null
  # -- SAML Identity Provider metadata URL (as visible from inside the container), optional.
  # Example: `"http://keycloak:8080/realms/ucs/protocol/saml/descriptor"`
  idpSamlMetadataUrlInternal: ""
  # -- UMC web page title. Chart supports templated values.
  umcHtmlTitle: "Univention Portal"
  # -- SAML Service Provider hostname (FQDN of the UMC, which is the service provider)
  # Example: `"portal.souvap.example.org"`
  umcSamlSpFqdn: null
  # -- Which address scheme to consider for SAML ACS (string, comma-separated). Chart default is `https`.
  # Example: `"https, http"`
  umcSamlSchemes: "https"
  # -- The FQDN of the identity provider (w/o the protocol specification).
  # Example: `"id.souvap.example.org"`
  idpFqdn: null
  # -- List of SAML Service Provider URLs which the LDAP server should trust (comma-separated).
  # Example: `"https://portal.souvap.example.org/univention/saml/metadata"`
  ldapSamlSpUrls: null
  # -- The authentication method to use for the portal. Default is `saml`.
  portalAuthMode: "saml"
  # -- The initial password of the user "Administrator".
  initialPasswordAdministrator: null
  # -- The initial password of the user "sys-idp-user.
  initialPasswordSysIdpUser: null
  # -- Domain name of the instance. Chart defaults to `univention-organization.intranet`
  # Example: `"example.org"`
  externalDomainName: ""

  portalFqdn: 'portal.{{ include "stack-data-ums.externalDomainName" . }}'

  # -- Self-service emails: SMTP host
  smtpHost: ""
  # -- Self-service emails: SMTP port
  # (default: `587`)
  smtpPort: 587
  # -- Self-service emails: SMTP username
  smtpUser: ""
  # -- Self-service emails: SMTP via TLS
  # (default: `true`)
  smtpStartTls: true

  # -- Default portal show UMC modules
  showUmc: true

nubusUmcServer:
  # -- Hostname of the UMC server used to disable self-service rate-limiting for requests from inside the cluster
  # This does set the UCR variable `umc/self-service/rate-limit/trusted-hosts`
  host: ''
  memcached:
    connection:
      # -- Hostname to use for memcached of the selfservice in UMC.
      # This does set the UCR variable `umc/self-service/memcached/socket`.
      host: ''
    auth:
      # -- Username to use for memcached of the selfservice in UMC.
      # This does set the UCR variable `umc/self-service/memcached/username`. UCR has no default.
      username: ''
  postgresql:
    connection:
      # -- Hostname to use for postgresql of the selfservice in UMC.
      # This does set the UCR variable `umc/self-service/postgresql/hostname`. UCR default is `localhost`.
      host: ''
      # -- Port to use for postgresql of the selfservice in UMC.
      # This does set the UCR variable `umc/self-service/postgresql/port`. UCR default is `5432`.
      port: ''
    auth:
      # -- Username to use for postgresql of the selfservice in UMC.
      # This does set the UCR variable `umc/self-service/postgresql/username`. UCR default is `selfservice`.
      username: ''
      # This does set the UCR variable `umc/self-service/postgresql/database`. UCR default is `selfservice`.
      database: ''
# -- Container image configuration
image:
  registry: ""
  repository: "nubus-dev/images/data-loader"
  pullPolicy: ""
  tag: "latest"

  # -- Define image sha256 as an alternative to `tag`
  sha256: null

# -- Extensions to load. This will override the configuration in
# `global.extensions`.
extensions: []

# -- Allows to configure the system extensions to load. This is intended for
# internal usage, prefer to use `extensions` for user configured extensions.
# This value will override the configuration in `global.systemExtensions`.
systemExtensions: []

# -- Additional custom annotations to add to deployed objects.
additionalAnnotations: {}

## Global values
affinity: {}
configMapUcr: '{{ include "common.names.fullname" . }}-ucr'
environment: {}
fullnameOverride: ""
mountSecrets: true
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
resources: {}

containerSecurityContext:
  privileged: false
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false
  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"
  # -- Enable security context.
  enabled: true
  # -- Process user id.
  runAsUser: 1000
  # -- Process group id.
  runAsGroup: 1000
  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"
  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: true
  # -- Run container as a user.
  runAsNonRoot: true

tolerations: []

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}

...
